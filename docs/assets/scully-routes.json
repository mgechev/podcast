[{"route":"/"},{"route":"/episode/1-13-2020-partial-application-currying","title":"Partial Application (not Currying)","description":"Today we'll discuss partial application and currying. By the end of the episode, you'll understand what these two different concepts are how they are different from each other, and where you can apply them in practice. In between the episode, we'll also talk about the brilliant computer scientist Haskell Curry, and we'll mention the Curry-Howard isomorphism.","audio":"https://feeds.soundcloud.com/stream/743152012-the-programming-podcast-episode-3-partial-application-not-currying.mp3","publish":true,"sourceFile":"1-13-2020-partial-application-currying.md"},{"route":"/episode/1-20-2020-quickselect-algorithm","title":"Quickselect","description":"Today we're going to talk about quickselect. This algorithm helps us quickly find the n-th smallest element in unsorted arrays. It'll not only help you improve the performance of your applications, but it's also a very common white-board interview problem.","audio":"https://feeds.soundcloud.com/stream/746885413-the-programming-podcast-episode-4-quickselect.mp3","publish":true,"sourceFile":"1-20-2020-quickselect-algorithm.md"},{"route":"/episode/1-27-2020-arrays-linked-lists","title":"Arrays and Linked Lists","description":"In this episode, we'll discuss two fundamental data structures in computer science - arrays and linked lists. Their understanding is essential not only in your day to day job but also for performing well on your next coding interview.","audio":"https://feeds.soundcloud.com/stream/750751408-the-programming-podcast-episode-5-arrays-and-linked-lists.mp3","publish":true,"sourceFile":"1-27-2020-arrays-linked-lists.md"},{"route":"/episode/1-4-2020-how-compilers-work","title":"How Compilers Work","description":"In this episode, we discuss how compilers work. By the end of the show, you'll have a high-level understanding of the phases the source code you write goes though before executed!","audio":"https://feeds.soundcloud.com/stream/738933013-the-programming-podcast-episode-1-how-compilers-work.mp3","publish":true,"sourceFile":"1-4-2020-how-compilers-work.md"},{"route":"/episode/1-5-2020-binary-search","title":"Binary Search","description":"Today we'll discuss the binary search algorithm. We'll go through several examples when the algorithm makes sense and discuss in detail how it works. By the end of the episode, you'll know when to apply a binary search and know why it's more efficient than a linear search.","audio":"https://feeds.soundcloud.com/stream/738933715-the-programming-podcast-episode-2-binary-search.mp3","publish":true,"sourceFile":"1-5-2020-binary-search.md"},{"route":"/episode/2-03-2020-graphs-and-graph-traversal","title":"Graphs and Graph Traversal","description":"In this episode, we'll discuss graphs. You'll learn how this data structure looks like and what are its applications. Later on, we'll talk about algorithms for traversing graphs. You'll understand how breadth-first search and depth-first search work and when you should use one instead of the other. Topics we'll also touch on are chromatic graphs and finding the shortest path.","audio":"https://feeds.soundcloud.com/stream/754730377-the-programming-podcast-episode-6-graphs-and-graph-traversal.mp3","publish":true,"sourceFile":"2-03-2020-graphs-and-graph-traversal.md"},{"route":"/episode/2-10-2020-tries","title":"Tries","description":"In the episode today, we'll talk about the trie data structure. You'll learn what tries are, how you can use them in practice, and how to implement them in your favorite programming language!","audio":"https://feeds.soundcloud.com/stream/758632885-the-programming-podcast-episode-7-tries.mp3","publish":true,"sourceFile":"2-10-2020-tries.md"},{"route":"/episode/2-17-2020-decorator-pattern","title":"Decorator Pattern","description":"Today you'll learn how at runtime, you can enhance the behavior or existing objects using the decorator pattern. In this episode, we'll discuss the advantages of decorators over inheritance and look at two examples from real-life - implementing a network communication protocol and enriching user interface components.","audio":"https://feeds.soundcloud.com/stream/762511612-the-programming-podcast-decorator-pattern.mp3","publish":true,"sourceFile":"2-17-2020-decorator-pattern.md"},{"route":"/episode/2-25-2020-sorting-counting-sort","title":"Sorting. Counting Sort.","description":"Have you ever been frustrated during interviews thinking that your interviewer expects you to have memorized a bunch of sorting algorithms you'd never need in real life? In this episode of the podcast learn how to approach such situations. In performance critical systems you may have to implement an efficient sorting yourself. Learn how to beat the built-in algorithm in a few lines of code!","audio":"http://feeds.soundcloud.com/stream/766603615-the-programming-podcast-sorting-counting-sort.mp3","publish":true,"sourceFile":"2-25-2020-sorting-counting-sort.md"},{"route":"/episode/3-16-2020-covid-19-epidemic-modeling-sir","title":"COVID-19. Epidemic modeling with SIR.","description":"Instead of digging into algorithms and data structures, today, you'll learn about epidemic modeling. In 9 minutes in this episode, you'll get a mathematical intuition on the spread of COVID-19 and the essential variables we can control, which can help us fight the virus.","audio":"https://feeds.soundcloud.com/stream/777444139-the-programming-podcast-covid-19.mp3","publish":true,"sourceFile":"3-16-2020-covid-19-epidemic-modeling-sir.md"},{"route":"/episode/3-2-2020-topological-sort","title":"Topological Sort","description":"In this episode, you'll learn the topological sort algorithm. Along the way, you'll understand what's a dependency graph and how topological sort operates on this data structure. We'll also discuss a few real-life examples where I had to implement topological sort myself!","audio":"https://feeds.soundcloud.com/stream/769948273-the-programming-podcast-episode-10-topological-sort.mp3","publish":true,"sourceFile":"3-2-2020-topological-sort.md"},{"route":"/episode/3-23-2020-binary-heaps","title":"Binary Heaps","description":"Today we're going to discuss the binary heap data structure. In this episode, you'll learn where to use heaps in practice, how they can come handy to you during a coding interview, and how to implement them!","audio":"https://feeds.soundcloud.com/stream/782072245-the-programming-podcast-binary-heaps.mp3","publish":true,"sourceFile":"3-23-2020-binary-heaps.md"},{"route":"/episode/3-30-2020-four-principles-of-object-oriented-programming","title":"The Four Principles of OOP","description":"In today's episode, you'll learn the four principles of object-oriented programming. We'll discuss abstraction, inheritance, encapsulation, and polymorphism. By the end of the show, you'll understand each one of them; you'll know how they relate to each other, and how to use them in practice.","audio":"https://feeds.soundcloud.com/stream/787273444-the-programming-podcast-episode-14-the-four-principles-of-oop.mp3","publish":true,"sourceFile":"3-30-2020-four-principles-of-object-oriented-programming.md"},{"route":"/episode/3-9-2020-coupling-and-cohesion","title":"Coupling and Cohesion","description":"Today you'll learn how keeping your abstractions more cohesive and less coupled can improve the quality and maintainability of your software.","audio":"https://feeds.soundcloud.com/stream/773562766-the-programming-podcast-coupling-and-cohesion.mp3","publish":true,"sourceFile":"3-9-2020-coupling-and-cohesion.md"},{"route":"/episode/4-13-2020-memoization","title":"Memoization","description":"Today we'll learn about memoization! Memoization is a practice that helps us improve the performance of our apps using caching. In the episode, we'll also discuss pure functions, caching strategies, and much more!","audio":"https://feeds.soundcloud.com/stream/798043168-the-programming-podcast-episode-16-memoization.mp3","publish":true,"sourceFile":"4-13-2020-memoization.md"},{"route":"/episode/4-20-2020-dependency-injection","title":"Dependency Injection","description":"Today we'll talk about using dependency injection across paradigms! You'll understand what this pattern is all about and how to use it.","audio":"https://feeds.soundcloud.com/stream/803589118-the-programming-podcast-episode-17-dependency-injection.mp3","publish":true,"sourceFile":"4-20-2020-dependency-injection.md"},{"route":"/episode/4-6-2020-compilers-linters-formatters","title":"Compilers, Linters, and Formatters","description":"In this episode of the programming podcast, we'll discuss static analysis and code transformation. In particular, we'll look at the difference between compilers, linters, and formatters. By the end of the episode, you'll understand what tool you should use to improve your development experience and team processes.","audio":"https://feeds.soundcloud.com/stream/792701521-the-programming-podcast-episode-15-compilers-linters-and-formatters.mp3","publish":true,"sourceFile":"4-6-2020-compilers-linters-formatters.md"},{"route":"/episode/5-25-2020-how-javascript-bundlers-work","title":"How JavaScript Bundlers Work","description":"In this episode, we'll look at what data structures and algorithms JavaScript bundlers use. We'll talk about ECMAScript modules, strongly connected components, depth-first search, and more! Enjoy!","audio":"https://feeds.soundcloud.com/stream/827975104-the-programming-podcast-episode-18-how-javascript-bundlers-work.mp3","publish":true,"sourceFile":"5-25-2020-how-javascript-bundlers-work.md"},{"route":"/episode/6-15-2020-type-systems-and-type-checking","title":"Type Systems and Type Checking","description":"In this episode, we'll look at the very basics of type systems and their enforcement. We'll discuss strongly and weakly typed languages. After that, we'll dig into different enforcement strategies - runtime with dynamic typing and compile-time with static typing.","audio":"https://feeds.soundcloud.com/stream/840962848-the-programming-podcast-type-systems-and-type-checking.mp3","publish":true,"sourceFile":"6-15-2020-type-systems-and-type-checking.md"},{"route":"/episode/6-23-2020-static-and-dynamic-systems-programming-frameworks","title":"Static and Dynamic Systems","description":"Today we'll look into static and dynamic systems. We'll discuss what does it mean for a programming language or a framework to be static or dynamic. In the second part of the podcast, we'll focus on some of the properties of static systems and how they can help in better compile-time optimizations, development experience, and more!","audio":"https://feeds.soundcloud.com/stream/845386276-the-programming-podcast-static-and-dynamic-systems.mp3","publish":true,"sourceFile":"6-23-2020-static-and-dynamic-systems-programming-frameworks.md"},{"route":"/about"}]